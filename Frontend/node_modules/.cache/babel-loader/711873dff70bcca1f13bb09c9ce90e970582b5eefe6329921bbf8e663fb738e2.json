{"ast":null,"code":"var _jsxFileName = \"/root/Three-Tier-Bank-App/Frontend/src/components/Transfer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:5000' : 'http://backend:5000';\nconst Transfer = () => {\n  _s();\n  const [accounts, setAccounts] = useState([]); // State for storing accounts\n  const [fromAccount, setFromAccount] = useState(null); // State for the from account\n  const [toAccount, setToAccount] = useState(null); // State for the to account\n  const [transferAmount, setTransferAmount] = useState(0); // State for transfer amount\n  const [message, setMessage] = useState(''); // State for success/error messages\n\n  // Fetch accounts from the backend when the component loads\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch(`${apiUrl}/api/accounts`);\n        const data = await response.json();\n        setAccounts(data); // Set accounts in state\n      } catch (error) {\n        console.error('Error fetching accounts:', error); // Log any errors\n      }\n    };\n    fetchAccounts();\n  }, [apiUrl]);\n\n  // Handle the transfer action\n  const handleTransfer = async e => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!fromAccount || !toAccount || fromAccount._id === toAccount._id) {\n      setMessage('Please select valid accounts');\n      return;\n    }\n    if (transferAmount <= 0) {\n      setMessage('Please enter a valid transfer amount');\n      return;\n    }\n    try {\n      const response = await fetch(`${apiUrl}/api/accounts/transfer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fromAccountNumber: fromAccount.accountNumber,\n          // Send from account number\n          toAccountNumber: toAccount.accountNumber,\n          // Send to account number\n          amount: parseInt(transferAmount, 10) // Ensure transfer amount is sent as a number\n        })\n      });\n      const result = await response.json(); // Get response from backend\n      if (response.ok) {\n        setMessage('Transfer successful');\n      } else {\n        setMessage(result.message || 'Error making transfer');\n      }\n    } catch (error) {\n      console.error('Error making transfer:', error); // Log errors\n      setMessage('Error making transfer');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transfer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"From Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setFromAccount(accounts.find(acc => acc._id === e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: account._id,\n        children: [account.firstName, \" \", account.lastName]\n      }, account._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: \"To Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setToAccount(accounts.find(acc => acc._id === e.target.value)),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), accounts.map(account => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: account._id,\n        children: [account.firstName, \" \", account.lastName]\n      }, account._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTransfer,\n      className: \"form-container\",\n      style: {\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Transfer Amount\",\n        onChange: e => setTransferAmount(e.target.value) // Update transfer amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '10px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Transfer, \"PCizo/ug+jkU3pSAISqVDvpjImw=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","apiUrl","process","env","NODE_ENV","Transfer","_s","accounts","setAccounts","fromAccount","setFromAccount","toAccount","setToAccount","transferAmount","setTransferAmount","message","setMessage","fetchAccounts","response","fetch","data","json","error","console","handleTransfer","e","preventDefault","_id","method","headers","body","JSON","stringify","fromAccountNumber","accountNumber","toAccountNumber","amount","parseInt","result","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","find","acc","target","value","map","account","firstName","lastName","style","marginTop","onSubmit","type","placeholder","_c","$RefreshReg$"],"sources":["/root/Three-Tier-Bank-App/Frontend/src/components/Transfer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst apiUrl = process.env.NODE_ENV === 'development'\n  ? 'http://localhost:5000'\n  : 'http://backend:5000';\n\nconst Transfer = () => {\n  const [accounts, setAccounts] = useState([]); // State for storing accounts\n  const [fromAccount, setFromAccount] = useState(null); // State for the from account\n  const [toAccount, setToAccount] = useState(null); // State for the to account\n  const [transferAmount, setTransferAmount] = useState(0); // State for transfer amount\n  const [message, setMessage] = useState(''); // State for success/error messages\n\n  // Fetch accounts from the backend when the component loads\n  useEffect(() => {\n    const fetchAccounts = async () => {\n      try {\n        const response = await fetch(`${apiUrl}/api/accounts`);\n        const data = await response.json();\n        setAccounts(data); // Set accounts in state\n      } catch (error) {\n        console.error('Error fetching accounts:', error); // Log any errors\n      }\n    };\n\n    fetchAccounts();\n  }, [apiUrl]);\n\n  // Handle the transfer action\n  const handleTransfer = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    if (!fromAccount || !toAccount || fromAccount._id === toAccount._id) {\n      setMessage('Please select valid accounts');\n      return;\n    }\n\n    if (transferAmount <= 0) {\n      setMessage('Please enter a valid transfer amount');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${apiUrl}/api/accounts/transfer`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          fromAccountNumber: fromAccount.accountNumber, // Send from account number\n          toAccountNumber: toAccount.accountNumber, // Send to account number\n          amount: parseInt(transferAmount, 10), // Ensure transfer amount is sent as a number\n        }),\n      });\n\n      const result = await response.json(); // Get response from backend\n      if (response.ok) {\n        setMessage('Transfer successful');\n      } else {\n        setMessage(result.message || 'Error making transfer');\n      }\n    } catch (error) {\n      console.error('Error making transfer:', error); // Log errors\n      setMessage('Error making transfer');\n    }\n  };\n\n  return (\n    <div className=\"transfer-container\">\n      <h2>Transfer</h2>\n\n      {/* Dropdown to select the from account */}\n      <label>From Account</label>\n      <select onChange={(e) => setFromAccount(accounts.find(acc => acc._id === e.target.value))}>\n        <option value=\"\">Select an account</option>\n        {accounts.map((account) => (\n          <option key={account._id} value={account._id}>\n            {account.firstName} {account.lastName}\n          </option>\n        ))}\n      </select>\n\n      {/* Dropdown to select the to account */}\n      <label style={{ marginTop: '10px' }}>To Account</label>\n      <select onChange={(e) => setToAccount(accounts.find(acc => acc._id === e.target.value))}>\n        <option value=\"\">Select an account</option>\n        {accounts.map((account) => (\n          <option key={account._id} value={account._id}>\n            {account.firstName} {account.lastName}\n          </option>\n        ))}\n      </select>\n\n      {/* Form for transferring money */}\n      <form onSubmit={handleTransfer} className=\"form-container\" style={{ marginTop: '10px' }}>\n        <input \n          type=\"number\" \n          placeholder=\"Transfer Amount\" \n          onChange={(e) => setTransferAmount(e.target.value)} // Update transfer amount\n        />\n        <button type=\"submit\">Transfer</button>\n      </form>\n\n      {/* Display success or error message with margin */}\n      <p style={{ marginTop: '10px' }}>{message}</p>\n    </div>\n  );\n};\n\nexport default Transfer;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}